openapi: 3.1.0
info:
  version: '1'
  title: 'MyAce API Documentation'
  x-logo:
    url: 'https://myace.ai/logo.svg'
    # backgroundColor: '#FFFFFF'
    altText: 'MyAce logo'
servers:
  - url: 'https://api.myace.ai'
paths:
  /register:
    post:
      summary: Register
      description: This route creates a new application user by accepting an enterprise invitation or a new team member using the server password.
      tags:
        - User
      requestBody:
        required: true
        content:
          'application/json':
              schema:
                oneOf:
                  - $ref: "#/components/schemas/NewAppUser"
                  - $ref: "#/components/schemas/NewMyAceTeamMember"
      security: [] # no authentication
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateUserWToken'
        default:
          $ref: '#/components/responses/DefaultError'

  /login:
    post:
      summary: Login
      description: This route establishes a session and returns a user.
      tags:
        - User
      requestBody:
        required: true
        content:
          'application/json':
              schema:
                type: object
                required: [email, password]
                properties:
                  email:
                    $ref: '#/components/schemas/UserEmail'
                  password:
                    $ref: '#/components/schemas/UserPassword'
      security: [] # no authentication
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateUserWToken'
        default:
          $ref: '#/components/responses/DefaultError'

  /users/{user_id}:
    get:
      summary: Get individual user
      description: This route retrieves the profile of a given user. If the authentication header is submitted and `user_id` matches that of the authenticated user, sensitive information will be returned.
      tags:
        - User
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserID'
      security: [] # no authentication required
      responses:
        '200':
          description: Retrieved user
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PublicUser'
                  - $ref: '#/components/schemas/PrivateUser'
        default:
          $ref: '#/components/responses/DefaultError'

  /users/me:
    patch:
      summary: Update current user
      description: This route edits the profile of the authenticated user.
      tags:
        - User
      requestBody:
        description: All fields are optional
        required: false
        content:
          'application/json':
              schema:
                type: object
                properties:
                  username:
                    $ref: "#/components/schemas/UserUsername"
                  display_name:
                    $ref: "#/components/schemas/UserDisplayName"
                  biography:
                    $ref: "#/components/schemas/UserBio"
                  password:
                    type: object
                    description: The old/new password combination.
                    required: [old_password, new_password]
                    properties:
                      old_password:
                        $ref: '#/components/schemas/UserPassword'
                      new_password:
                        $ref: '#/components/schemas/UserPassword'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateUser'
        default:
          $ref: '#/components/responses/DefaultError'

    delete:
      summary: Delete current user
      description: This route permanently deletes the account of the user who is currently logged in along with all associated information.
      tags:
        - User
      responses:
        '204':
          description: User deleted
        default:
          $ref: '#/components/responses/DefaultError'

  /usernames/{username}/check:
    get:
      summary: Check username
      description: This route checks the availability of a given username.
      tags:
        - User
      parameters:
        - name: username
          in: path
          description: The username to query. # this description overrides the schema's description
          required: true
          schema:
            $ref: '#/components/schemas/UserUsername'
      security: [] # no authentication
      responses:
        '200':
          description: Checked username
          content:
            application/json:
              schema:
                type: object
                required: [available]
                properties:
                  available:
                    type: boolean
                    description: Whether or not another user has reserved this username.
        default:
          $ref: '#/components/responses/DefaultError'

  /enterprises:
    get:
      summary: Retrieve all enterprises
      description: This route retrieves all enterprises on the application. The client must be a MyAce team member to access this route.
      tags:
        - Enterprises
      responses:
        '200':
          description: Retrieved enterprises
          content:
            application/json:
              schema:
                type: object
                required: [enterprises]
                properties:
                  enterprises:
                    type: array
                    items:
                      $ref: "#/components/schemas/Enterprise"
        default:
          $ref: '#/components/responses/DefaultError'

    post:
      summary: Create an enterprise
      description: This route creates a new enterprise. The authenticated user making this request must be a part of the MyAce team.
      tags:
        - Enterprises
      requestBody:
        required: true
        content:
          'application/json':
              schema:
                $ref: "#/components/schemas/NewEnterprise"
      responses:
        '201':
          description: Enterprise created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        default:
          $ref: '#/components/responses/DefaultError'

  /enterprises/{enterprise_id}:
    get:
      summary: Retrieve an enterprise
      description: This route retrieves an enterprise by its unique ID.
      tags:
        - Enterprises
      parameters:
        - name: enterprise_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EnterpriseID'
      responses:
        '200':
          description: Retrieved enterprise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enterprise"
        default:
          $ref: '#/components/responses/DefaultError'

    patch:
      summary: Update an enterprise
      description: This route edits an enterprise by its unique ID.
      tags:
        - Enterprises
      parameters:
        - name: enterprise_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EnterpriseID'
      requestBody:
        description: All fields are optional
        required: false
        content:
          'application/json':
              schema:
                $ref: "#/components/schemas/UpdateEnterprise"
      responses:
        '200':
          description: Updated enterprise
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enterprise"
        default:
          $ref: '#/components/responses/DefaultError'

    delete:
      summary: Delete an enterprise
      description: This route permanently deletes the specified enterprise.
      tags:
        - Enterprises
      parameters:
        - name: enterprise_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EnterpriseID'
      responses:
        '204':
          description: Enterprise deleted
        default:
          $ref: '#/components/responses/DefaultError'

  /enterprises/{enterprise_id}/invitations:
    post:
      summary: Invite user to enterprise
      description: This route invites a user by email to an enterprise. If the user account does not already exist, registration instructions will be sent to their email.
      tags:
        - Enterprise Invitations
      requestBody:
        required: true
        content:
          'application/json':
              schema:
                type: object
                required: [user_email, role]
                properties:
                  user_email:
                    $ref: "#/components/schemas/UserEmail"
                  role:
                    $ref: "#/components/schemas/EnterpriseRole"
      responses:
        '201':
          description: Enterprise invitation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationForEnterprise'
        default:
          $ref: '#/components/responses/DefaultError'

    get:
      summary: Retrieve all outgoing invitations
      description: This route retrieves all outgoing enterprise invitations for an enterprise manager to view.
      tags:
        - Enterprise Invitations
      responses:
        '200':
          description: Retrieved outgoing invitations
          content:
            application/json:
              schema:
                type: object
                required: [invitations]
                properties:
                  invitations:
                    type: array
                    items:
                      $ref: "#/components/schemas/InvitationForEnterprise"
        default:
          $ref: '#/components/responses/DefaultError'

  /enterprises/invitations:
    get:
      summary: Retrieve all incoming invitations
      description: This route retrieves all incoming enterprise invitations for the recipient to view.
      tags:
        - Enterprise Invitations
      responses:
        '200':
          description: Retrieved incoming invitations
          content:
            application/json:
              schema:
                type: object
                required: [invitations]
                properties:
                  invitations:
                    type: array
                    items:
                      $ref: "#/components/schemas/InvitationForRecipient"
        default:
          $ref: '#/components/responses/DefaultError'

  /enterprises/invitations/{invite_id}:
    delete:
      summary: Delete invitation
      description: This route deletes an invitation to join an enterprise. Calling this route means that an enterprise manager has uninvited a user, or a user has rejected an incoming invitation.
      tags:
        - Enterprise Invitations
      parameters:
        - name: invite_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/EnterpriseInviteID"
      responses:
        '204':
          description: Deleted/Rejected invite
        default:
          $ref: '#/components/responses/DefaultError'

  /enterprises/invitations/{invite_id}/accept:
    post:
      summary: Accept incoming invitation
      description: This route accepts an incoming invitation to join an enterprise.
      tags:
        - Enterprise Invitations
      parameters:
        - name: invite_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/EnterpriseInviteID"
      responses:
        '204':
          description: Accepted invite
        default:
          $ref: '#/components/responses/DefaultError'

  /enterprises/{enterprise_id}/members:
    get:
      summary: Retrieve all enterprise members
      description: This route retrieves all members within a given enterprise.
      tags:
        - Enterprise Members
      parameters:
        - name: enterprise_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/EnterpriseID"
      responses:
        '200':
          description: Retrieved members
          content:
            application/json:
              schema:
                type: object
                required: [members]
                properties:
                  members:
                    type: array
                    items:
                      $ref: "#/components/schemas/EnterpriseMember"
        default:
          $ref: '#/components/responses/DefaultError'

  /enterprises/{enterprise_id}/members/{user_id}:
    patch:
      summary: Edit enterprise role
      description: This route edits the user's role within an enterprise.
      tags:
        - Enterprise Members
      parameters:
        - name: enterprise_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/EnterpriseID"
        - name: user_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UserID"
      requestBody:
        required: true
        content:
          'application/json':
              schema:
                type: object
                required:
                  - role
                properties:
                  role:
                    $ref: "#/components/schemas/EnterpriseRole"
      responses:
        '200':
          description: Updated member
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnterpriseMember"
        default:
          $ref: '#/components/responses/DefaultError'

    delete:
      summary: Remove member
      description: This route removes a member from an enterprise.
      tags:
        - Enterprise Members
      parameters:
        - name: enterprise_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/EnterpriseID"
        - name: user_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UserID"
      responses:
        '204':
          description: Removed user from enterprise
        default:
          $ref: '#/components/responses/DefaultError'

  # /users/forgot/:
  #   post:
  #     summary: Forgot password
  #     description: This route sends a password recovery link to a specified email if the email belongs to a user. If the provided email is invalid, no email will be sent, but the response will still indicate success in order to mitigate abuse.
  #     tags:
  #       - TODO # TODO
  #     requestBody:
  #       required: true
  #       content:
  #         'application/json':
  #             schema:
  #               type: object
  #               required:
  #                 - email
  #               properties:
  #                 email:
  #                   $ref: "#/components/schemas/UserEmail"
  #     security: [] # no authentication
  #     responses:
  #       '204':
  #         description: Email possibly sent.
  #       default:
  #         $ref: '#/components/responses/DefaultError'


components:

  responses:
    DefaultError:
      description: Unexpected error
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: string

  schemas:
    NewMyAceTeamMember:
      type: object
      required:
        - email
        - username
        - password
        - role
        - server_password
      properties:
        email:
          $ref: "#/components/schemas/UserEmail"
        username:
          $ref: "#/components/schemas/UserUsername"
        password:
          $ref: "#/components/schemas/UserPassword"
        role:
          $ref: "#/components/schemas/MyAceTeamRole"
        server_password:
          type: string
          description: The master password of the application.
          format: password

    NewAppUser:
      type: object
      required:
        - username
        - invite_code
        - password
      properties:
        username:
          $ref: "#/components/schemas/UserUsername"
        display_name:
          $ref: "#/components/schemas/UserDisplayName"
        biography:
          $ref: "#/components/schemas/UserBio"
        invite_code:
          type: string
          description: A special code that will be used to join an enterprise immediately after registration.
        password:
          $ref: "#/components/schemas/UserPassword"

    PublicUser:
      description: The public view of a user.
      type: object
      required:
        - user_id
        - username
        - display_name
        - biography
      properties:
        user_id:
          $ref: "#/components/schemas/UserID"
        username:
          $ref: "#/components/schemas/UserUsername"
        display_name:
          $ref: "#/components/schemas/UserDisplayName"
        biography:
          $ref: "#/components/schemas/UserBio"

    PublicUserWEmail:
      description: The public view of a user, along with their email to be used for administrative purposes.
      allOf:
        - $ref: "#/components/schemas/PublicUser"
        - type: object
          required:
            - email
          properties:
            email:
              $ref: "#/components/schemas/UserEmail"

    PrivateUser:
      description: The private view of a user, which contains sensitive profile information.
      allOf:
        - $ref: '#/components/schemas/PublicUser'
        - type: object
          required:
            - email
            - created_at
            - updated_at
          properties:
            email:
              $ref: "#/components/schemas/UserEmail"
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              description: The ISO 8601 timestamp of the user's last profile edit.
              format: date-time
              nullable: true

    PrivateUserWToken:
      description: The private view of a user, which contains sensitive profile information and a refreshed session token.
      allOf:
        - $ref: "#/components/schemas/PrivateUser"
        - type: object
          required:
            - token
          properties:
            token:
              type: string
              description: A bearer token that may be used in in the Authentication header.

    NewEnterprise:
      type: object
      required: [name]
      properties:
        name:
          $ref: "#/components/schemas/EnterpriseName"
        website:
          $ref: "#/components/schemas/EnterpriseWebsite"
        support_email:
          $ref: "#/components/schemas/EnterpriseEmail"
        support_phone:
          $ref: "#/components/schemas/EnterprisePhoneNumber"

    UpdateEnterprise:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/EnterpriseName"
        website:
          $ref: "#/components/schemas/EnterpriseWebsite"
        support_email:
          $ref: "#/components/schemas/EnterpriseEmail"
        support_phone:
          $ref: "#/components/schemas/EnterprisePhoneNumber"

    Enterprise:
      type: object
      required:
        - enterprise_id
        - name
        - website
        - support_email
        - support_phone
        - logo
        - created_at
      properties:
        enterprise_id:
          $ref: "#/components/schemas/EnterpriseID"
        name:
          $ref: "#/components/schemas/EnterpriseName"
        website:
          allOf:
            - nullable: true
            - $ref: "#/components/schemas/EnterpriseWebsite"
        support_email:
          allOf:
            - nullable: true
            - $ref: "#/components/schemas/EnterpriseEmail"
        support_phone:
          allOf:
            - nullable: true
            - $ref: "#/components/schemas/EnterprisePhoneNumber"
        logo:
          allOf:
            - nullable: true
            - $ref: "#/components/schemas/EnterpriseLogo"
        created_at:
          type: string
          format: date-time

    InvitationForEnterprise:
      type: object
      description: An invitation to an enterprise from the perspective of that enterprise's manager.
      required:
        - invite_id
        - user_email
        - role
        - created_at
      properties:
        invite_id:
          $ref: "#/components/schemas/EnterpriseInviteID"
        user_email:
          $ref: "#/components/schemas/UserEmail"
        role:
          $ref: "#/components/schemas/EnterpriseRole"
        created_at:
          type: string
          format: date-time

    InvitationForRecipient:
      type: object
      description: An invitation to an enterprise from the perspective of the invitee.
      required:
        - invite_id
        - role
        - enterprise
        - created_at
      properties:
        invite_id:
          $ref: "#/components/schemas/EnterpriseInviteID"
        role:
          $ref: "#/components/schemas/EnterpriseRole"
        enterprise:
          $ref: "#/components/schemas/Enterprise"
        created_at:
          type: string
          format: date-time

    EnterpriseMember:
      type: object
      description: A user's membership information within an enterprise
      required:
        - user
        - role
        - member_since
      properties:
        user:
          $ref: "#/components/schemas/PublicUserWEmail"
        role:
          $ref: "#/components/schemas/EnterpriseRole"
        member_since:
          type: string
          format: date-time

    # ------------------------------ Common types ------------------------------

    MyAceTeamRole:
      type: string
      description: The role of a user within the MyAce development team.
      enum:
        - backend
        - frontend
        - business

    UserID:
      type: string
      description: The user's unique identifier.
      format: uuid

    UserEmail:
      type: string
      description: The user's email address.
      format: email
      pattern: ^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$
      example: johnsmith@gmail.com

    UserUsername:
      type: string
      description: A unique, user-friendly profile identifier.
      pattern: ^[a-z0-9_.]{4,16}$
      example: tennislover9

    UserPassword:
      type: string
      description: The user's password.
      format: password
      # TODO: add regex
      # pattern: ^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9\-\"[\]!#$%&'()*+,./:;<=>?@^_`{|}~])[A-Za-z0-9\-\"[\]!#$%&'()*+,./:;<=>?@^_`{|}~]{6,}$
      example: Tnns31!

    UserDisplayName:
      type: string
      description: The name of a user.
      example: John Smith

    UserBio:
      type: string
      description: A personalized biography.
      example: I couldn't figure out why the ball was getting bigger. Then it hit me.

    EnterpriseID:
      type: string
      description: The enterprise's unique identifier.
      format: uuid

    EnterpriseName:
      type: string
      description: The public name of an enterprise.
      example: Laguna Beach Tennis Club

    EnterpriseWebsite:
      type: string
      description: The homepage of an enterprise.
      example: https://www.lagunabeachtennisclub.com

    EnterprisePhoneNumber:
      type: string
      description: The support phone number for an enterprise.
      pattern: ^\d+$

    EnterpriseEmail:
      type: string
      description: The support email address for an enterprise.
      format: email
      pattern: ^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$
      example: support@lagunabeachtennisclub.com

    EnterpriseLogo:
      type: string
      description: The URL that points to an enterprise's 1:1 logo image.
      example: https://logo.png

    EnterpriseRole:
      type: string
      description: The role of a user within an enterprise.
      enum:
        - parent
        - player
        - instructor
        - admin

    EnterpriseInviteID:
      type: string
      description: The enterprise invitation's unique identifier.
      format: uuid

  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

security:
  - bearerAuth: []
